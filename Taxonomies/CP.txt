computer programming (Q80006) •110 ×6 ↑↑
├──agile software development (Q30232) •45 ×4 ↑
│  ├──extreme programming (Q209711) •42
│  ├──pair programming (Q607013) •25
│  ├──behavior-driven development (Q814447) •17 ↑↑
│  ├──Scaled Agile Framework (Q23808624) •4
│  ├──Mob programming (Q25111127) •3
│  └──Agile-Stage-Gate (Q104696824) ↑
├──aspect-oriented programming (Q30267) •31 ↑
├──concurrent computing (Q128392) •22
│  ├──multitasking (Q192969) •38
│  │  ├──cooperative multitasking (Q16969336) •8
│  │  │  └──cyclic executive (Q173772) •2
│  │  └──preemptive multitasking (Q104531552)
│  ├──concurrent constraint logic programming (Q5159106) •3 ↑
│  └──Relativistic programming (Q7310831) •2
├──recursion (Q264164) •28
│  └──Recursion termination (Q17125385) •1
├──Method overriding (Q333324) •9
├──declarative programming (Q531152) •29 ↑
│  ├──functional programming (Q193076) •52 ×2
│  │  ├──Functional logic programming (Q5508829) •6 ↑
│  │  ├──functional reactive programming (Q5508843) •3 ↑
│  │  └──purely functional programming (Q28453809) •3 ↑
│  │     └──total functional programming (Q17146827) •1
│  ├──logic programming (Q275603) •36 ×3
│  │  ├──answer set programming (Q2852531) •10
│  │  ├──Abductive logic programming (Q4665212) •5
│  │  ├──constraint logic programming (Q5164378) •3 ↑
│  │  │  ╘══concurrent constraint logic programming (Q5159106) •3 ↑ …
│  │  ╞══Functional logic programming (Q5508829) •6 ↑ …
│  │  ├──Multi-adjoint logic programming (Q6934419) •1
│  │  └──concurrent logic programming (Q17008825) •3
│  ├──constraint programming (Q528588) •16
│  │  ╘══constraint logic programming (Q5164378) •3 ↑ …
│  ├──dataflow programming (Q1172543) •8
│  │  ├──reactive programming (Q4354073) •11
│  │  │  ╘══functional reactive programming (Q5508843) •3 ↑ …
│  │  └──Flow-based programming (Q5462045) •5
│  ╘══purely functional programming (Q28453809) •3 ↑ …
├──component-based software engineering (Q609588) •16 ×3 ↑
│  ├──plug-in (Q184148) •49 ×80 ↑↑
│  │  ├──loadable kernel module (Q1739331) •20 ×1 ↑↑
│  │  │  ├──NetWare Loadable Module (Q17042621) •1 ↑
│  │  │  └──Linux kernel module (Q70589944) •2 ×2
│  │  ├──BBS door (Q4835082) •1
│  │  │  └──??? (Q4034678) •1 ↑
│  │  ├──Peekko (Q10622204) •1
│  │  └──Firefox plugin (Q51673934) ↑
│  └──virtual keyboard (Q861170) •22 ×8 ↑
├──metaprogramming (Q661075) •28 ×1
│  ├──automatic programming (Q762268) •17 ×1
│  ├──template metaprogramming (Q773763) •14
│  │  └──Policy-based design (Q28201) •6
│  ├──homoiconicity (Q925488) •13
│  └──Macro metaprogramming (Q28916664)
╞══behavior-driven development (Q814447) •17 ↑↑ …
├──Big Trak (Q859766) •4
├──non-structured programming (Q905156) •9
│  └──array programming (Q4795882) •6
├──cargo cult programming (Q1027351) •9 ↑↑
├──generic programming (Q1051282) •28
├──reflective programming (Q1056451) •26 ↑
│  └──attribute-oriented programming (Q4818707) •4
├──event-driven programming (Q1135914) •25
│  ├──Time-driven programming (Q7804821) •2
│  └──Service-oriented programming (Q28916650)
├──Skeleton (Q1169129) •6
├──Server-side scripting (Q1209289) •15 ×1
├──GQM (Q1533422) •8
├──systems programming (Q1936256) •11
├──object-orientation (Q2011845) •7
│  └──Object-oriented software engineering (Q3348112) •7
├──programming (Q2289786) •16 ×2 ↑
├──evolutionary programming (Q2596288) •11
├──tacit programming (Q3305965) •5
├──quantum programming (Q4218497) •8
├──multi-paradigm programming (Q4306983) •1
├──copy-and-paste programming (Q5169171) •9
│  ╘══cargo cult programming (Q1027351) •9 ↑↑ …
├──Programming in the large and programming in the small (Q7248503) •2
├──Set theoretic programming (Q7456315) •3
├──??? (Q15879450) •1
├──HiLog (Q17029831) •1
├──Creative coding (Q17087654) •3 ↑
├──Micro-programming (Q20826957) •1
├──stack-oriented programming (Q52845127) •3
├──dependently typed programming (Q56232424) ↑
├──social coding (Q60345297) ↑
├──asynchronous programming (Q84601194) •1
├──rule-based programming (Q90054345)
└──Programming by Voice (Q106135416)
